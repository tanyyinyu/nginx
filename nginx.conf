user  nginx;
worker_processes  2;    #cpu核数；
worker_rlimit_nofile 102400; 

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  10240;	
    use epoll;
    multi_accept on;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;  
    tcp_nopush      on;    #当应用程序产生数据时，内核不会立马封装包，而是当数据量积累到一定量时才会封装，然后传输； 
    tcp_nodelay     on;    #提高高频发送小数据报文的实时性,off可以降低网络里小包的数量，从而提升网络性能；

    keepalive_timeout  65;   #30，长连接超时时间;
    client_body_timeout 10;  
    send_timeout 3;

    gzip  on;
    gzip_min_length 1024;
    gzip_buffers 16 8k;
    gzip_comp_level 6; 
    gzip_types text/plain application/x-javascript text/css application/xml image/jpeg image/gif image/png; 
    gzip_disable "MSIE 6\.";    

    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 4k;
    open_file_cache max=102400 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;    

    include /etc/nginx/conf.d/*.conf;
}
